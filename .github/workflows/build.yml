name: build

on:
  pull_request:
  workflow_dispatch:
jobs:
#  start-self-hosted-runner:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout simplecore-tools
#        uses: actions/checkout@v4.1.1
#        with:
#          ssh-key: ${{ secrets.PRIVATE_KEY }}
#      - name: Start VM
#        timeout-minutes: 1440
#        id: start-vm
#        shell: bash
#        run: |
#          # Login Azure command line
#          az login --service-principal --username ${{ secrets.AZURE_USER_ID }} --tenant ${{ secrets.AZURE_TENANT_ID }} --password ${{ secrets.AZURE_USER_TOKEN }}
#          export AZ_BEARER=$(az account get-access-token --query accessToken -o tsv --subscription ${{ secrets.AZURE_VM_SUBSCRIPTION_ID }})
#          $GITHUB_WORKSPACE/scotty/scripts/start-vm \
#            "${{ secrets.AZURE_VM_SUBSCRIPTION_ID }}" \
#            "${{ secrets.AZURE_VM_RESSOURCE_GROUP_NAME }}" \

  build:
    runs-on: self-hosted
    container:
      image: ghcr.io/smagninfeysot/iotc-sdk-build-lite:0.1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build all
        run: |
          git clone git://git.yoctoproject.org/poky.git -b hardknott
          git clone git://git.openembedded.org/meta-openembedded  -b hardknott
          git clone git://git.yoctoproject.org/meta-raspberrypi.git -b hardknott
          source poky/oe-init-build-env
          bitbake-layers add-layer ../meta-raspberrypi/
          bitbake-layers add-layer ../meta-openembedded/meta-oe/
          bitbake-layers add-layer ../meta-openembedded/meta-python/
          bitbake-layers add-layer ../meta-openembedded/meta-multimedia/
          bitbake-layers add-layer ../meta-openembedded/meta-networking/
          echo -e '\nSECURITY_STRINGFORMAT = ""\n' >> ./conf/local.conf
          echo -e '\nLICENSE_FLAGS_ACCEPTED = " synaptics-killswitch"\nENABLE_UART = "1"\n' >> ./conf/local.conf
          echo -e '\nDISTRO_FEATURES_append = " systemd"\nDISTRO_FEATURES_BACKFILL_CONSIDERED += " sysvinit"\nVIRTUAL-RUNTIME_init_manager = " systemd"\nVIRTUAL-RUNTIME_initscripts = " systemd-compat-units"\n' >> ./conf/local.conf
          cd ..
          wget https://github.com/avnet-iotconnect/iotc-yocto-python-sdk/archive/refs/heads/hardknott.zip
          unzip hardknott.zip -d .tmp/
          mv .tmp/iotc-yocto-python-sdk-hardknott/meta-* .
          rm -r hardknott.zip .tmp/
          cd build
          bitbake-layers add-layer ../meta-iotc-python-sdk/
          bitbake-layers add-layer ../meta-my-iotc-python-sdk-example/
          echo -e '\nIMAGE_INSTALL += "iotc-demo-dev packagegroup-core-boot kernel-modules nano"' >> ./conf/local.conf
          bitbake core-image-base
 #
 # stop-self-hosted-runner:
 #   runs-on: ubuntu-latest
 #   needs:
 #     [
 #       start-self-hosted-runner,
 #       setup-environment,
 #       generate-docs,
 #       build-image,
 #       check-layers,
 #       test-report,
 #       scotty-feature-check,
 #     ]
 #   if: always()
 #   env:
 #     MANIFEST_REV: ${{ needs.setup-environment.outputs.scotty_manifest_sha }}
 #     STORE_ARTIFACTS: ${{ needs.setup-environment.outputs.store_artifacts }}
 #     RELEASE: ${{ needs.setup-environment.outputs.release }}
 #     SCOTTY_UPDATE_OVERRIDES: ${{ needs.setup-environment.outputs.scotty_overrides }}
 #     PROFILE: ${{ needs.setup-environment.outputs.profile }}
 #   steps:
 #     - name: Checkout simplecore-tools
 #       uses: actions/checkout@v4.1.1
 #       with:
 #         ssh-key: ${{ secrets.PRIVATE_KEY }}
 #     - name: Stop VM composite
 #       uses: ./.github/actions/stop-self-hosted-runner
